{
	"info": {
		"_postman_id": "66281544-3882-43de-ad77-aaf809ee91dd",
		"name": "spatialid",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39018720"
	},
	"item": [
		{
			"name": "latlon2spatialid",
			"item": [
				{
					"name": "1-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"10/896/405/10/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35&lon=135&alt=20&h_zoom=10&v_zoom=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35"
								},
								{
									"key": "lon",
									"value": "135"
								},
								{
									"key": "alt",
									"value": "20"
								},
								{
									"key": "h_zoom",
									"value": "10"
								},
								{
									"key": "v_zoom",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"0/0/0/0/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=-85.0511287797&lon=-180&alt=10&h_zoom=0&v_zoom=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "-85.0511287797"
								},
								{
									"key": "lon",
									"value": "-180"
								},
								{
									"key": "alt",
									"value": "10"
								},
								{
									"key": "h_zoom",
									"value": "0"
								},
								{
									"key": "v_zoom",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"25/0/0/25/3\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=85.0511287797&lon=180&alt=3&h_zoom=25&v_zoom=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "85.0511287797"
								},
								{
									"key": "lon",
									"value": "180"
								},
								{
									"key": "alt",
									"value": "3"
								},
								{
									"key": "h_zoom",
									"value": "25"
								},
								{
									"key": "v_zoom",
									"value": "25"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&crs=4612",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "crs",
									"value": "4612"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=0&interval=5000&start_datetime=2025-01-01 12:30:55",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "0"
								},
								{
									"key": "interval",
									"value": "5000"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 12:30:55"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_5000/347146\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=5000&start_datetime=2025-01-01 12:30:55",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "5000"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 12:30:55"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_5000/347146\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=5000&start_datetime=2025-01-01 12:30:55.12345",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "5000"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 12:30:55.12345"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_5000/347140\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=5000&start_datetime=2025-01-01%2012%3A30%3A55%2B09%3A00",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "5000"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01%2012%3A30%3A55%2B09%3A00",
									"description": "2025-01-01 12:30:55+09:00をエンコーディングしたもの"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_5000/347149\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=5000&start_datetime=2025-01-01%2012%3A30%3A55-03%3A30",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "5000"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01%2012%3A30%3A55-03%3A30",
									"description": "2025-01-01 12:30:55-03:30をエンコーディングしたもの"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_5000/347140\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=5000&start_datetime=2025-01-01%2012%3A30%3A55.12345%2B09%3A00",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "5000"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01%2012%3A30%3A55.12345%2B09%3A00",
									"description": "2025-01-01 12:30:55.12345+09:00をエンコーディングしたもの"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(4);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_1800/964292\");\r",
									"    pm.expect(responseJson.spatialid[1]).to.eql(\"11/1794/807/15/0_1800/964293\");\r",
									"    pm.expect(responseJson.spatialid[2]).to.eql(\"11/1794/807/15/0_1800/964294\");\r",
									"    pm.expect(responseJson.spatialid[3]).to.eql(\"11/1794/807/15/0_1800/964295\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=1800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 11:30:00&sort=default",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "1800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:30:00"
								},
								{
									"key": "sort",
									"value": "default"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(3);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_3600/482146\");\r",
									"    pm.expect(responseJson.spatialid[1]).to.eql(\"11/1794/807/15/0_3600/482147\");\r",
									"    pm.expect(responseJson.spatialid[2]).to.eql(\"11/1794/807/15/0_3600/482148\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=3600&start_datetime=2025-01-01 10:59:59&end_datetime=2025-01-01 12:00:00",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "3600"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:59:59"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 12:00:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-13",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_10800/160715\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=10800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 11:30:00",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "10800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:30:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-14",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(3);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_1800/964293\");\r",
									"    pm.expect(responseJson.spatialid[1]).to.eql(\"11/1794/807/15/0_1800/964294\");\r",
									"    pm.expect(responseJson.spatialid[2]).to.eql(\"11/1794/807/15/0_1800/964295\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=1800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 12:00:00&sort=within",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "1800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 12:00:00"
								},
								{
									"key": "sort",
									"value": "within"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_3600/482147\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=3600&start_datetime=2025-01-01 10:00:01&end_datetime=2025-01-01 12:59:59&sort=within",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "3600"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:00:01"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 12:59:59"
								},
								{
									"key": "sort",
									"value": "within"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=10800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 12:00:00&sort=within",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "10800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 12:00:00"
								},
								{
									"key": "sort",
									"value": "within"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-17",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_1800/964295\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=1800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 11:30:00&sort=latest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "1800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:30:00"
								},
								{
									"key": "sort",
									"value": "latest"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-18",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_3600/482147\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=3600&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 11:29:59&sort=latest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "3600"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:29:59"
								},
								{
									"key": "sort",
									"value": "latest"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1-19",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid.length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0]).to.eql(\"11/1794/807/15/0_10800/160715\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=10800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 11:30:00&sort=latest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "10800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:30:00"
								},
								{
									"key": "sort",
									"value": "latest"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2-20",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params exception is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"exception\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Exception error\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&crs=11111",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "crs",
									"value": "11111"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2-21",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params exception is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"exception\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Exception error\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&crs=3097",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "crs",
									"value": "3097"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2-22",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params sort is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"sort\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Invalid sort. Sort is one of ['default', 'within', 'latest']\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=1800&start_datetime=2025-01-01 10:20:00&end_datetime=2025-01-01 11:30:00&sort=with",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "1800"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 10:20:00"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:30:00"
								},
								{
									"key": "sort",
									"value": "with"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2-23",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params interval is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});\r",
									"pm.test(\"invalid params start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[1][\"name\"]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[1][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2-24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params interval is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});\r",
									"pm.test(\"invalid params start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[1][\"name\"]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[1][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&end_datetime=2025-01-01 11:30:00",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "end_datetime",
									"value": "2025-01-01 11:30:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-25",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"greater_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=-85.0511287798&lon=-180.1&alt=10&h_zoom=-1&v_zoom=-1&timeid_flg=-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "-85.0511287798"
								},
								{
									"key": "lon",
									"value": "-180.1"
								},
								{
									"key": "alt",
									"value": "10"
								},
								{
									"key": "h_zoom",
									"value": "-1"
								},
								{
									"key": "v_zoom",
									"value": "-1"
								},
								{
									"key": "timeid_flg",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-26",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"less_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=85.0511287798&lon=180.1&alt=10&h_zoom=26&v_zoom=26&timeid_flg=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "85.0511287798"
								},
								{
									"key": "lon",
									"value": "180.1"
								},
								{
									"key": "alt",
									"value": "10"
								},
								{
									"key": "h_zoom",
									"value": "26"
								},
								{
									"key": "v_zoom",
									"value": "26"
								},
								{
									"key": "timeid_flg",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-27",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"less_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=900.0&lon=1800.0&alt=10.5&h_zoom=11&v_zoom=15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "900.0"
								},
								{
									"key": "lon",
									"value": "1800.0"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-28",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15&timeid_flg=1&interval=1000&start_datetime=2025/1/1 12:30:55&end_datetime=2025/1/1 12:30:55",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								},
								{
									"key": "timeid_flg",
									"value": "1"
								},
								{
									"key": "interval",
									"value": "1000"
								},
								{
									"key": "start_datetime",
									"value": "2025/1/1 12:30:55"
								},
								{
									"key": "end_datetime",
									"value": "2025/1/1 12:30:55"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-29",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lon=135.5&alt=10.5&h_zoom=11.1&v_zoom=15.1&crs=4326.1&timeid_flg=0.9&interval=50000.1&start_datetime=2025-01-01 12:30:55",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11.1"
								},
								{
									"key": "v_zoom",
									"value": "15.1"
								},
								{
									"key": "crs",
									"value": "4326.1"
								},
								{
									"key": "timeid_flg",
									"value": "0.9"
								},
								{
									"key": "interval",
									"value": "50000.1"
								},
								{
									"key": "start_datetime",
									"value": "2025-01-01 12:30:55"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=aaa&lon=bbb&alt=ccc&h_zoom=ddd&v_zoom=eee&crs=fff&timeid_flg=ggg&interval=hhh&start_datetime=iii&end_datetime=jjj",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "aaa"
								},
								{
									"key": "lon",
									"value": "bbb"
								},
								{
									"key": "alt",
									"value": "ccc"
								},
								{
									"key": "h_zoom",
									"value": "ddd"
								},
								{
									"key": "v_zoom",
									"value": "eee"
								},
								{
									"key": "crs",
									"value": "fff"
								},
								{
									"key": "timeid_flg",
									"value": "ggg"
								},
								{
									"key": "interval",
									"value": "hhh"
								},
								{
									"key": "start_datetime",
									"value": "iii"
								},
								{
									"key": "end_datetime",
									"value": "jjj"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-31",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=３５．５&lon=１３５．５&alt=１０．５&h_zoom=１１&v_zoom=１５&crs=４３２６&timeid_flg=１&interval=５０００&start_datetime=２０２５－０１－０１　１２：３０：５５&end_datetime=２０２５－０１－０１　１２：３０：５５",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "３５．５"
								},
								{
									"key": "lon",
									"value": "１３５．５"
								},
								{
									"key": "alt",
									"value": "１０．５"
								},
								{
									"key": "h_zoom",
									"value": "１１"
								},
								{
									"key": "v_zoom",
									"value": "１５"
								},
								{
									"key": "crs",
									"value": "４３２６"
								},
								{
									"key": "timeid_flg",
									"value": "１"
								},
								{
									"key": "interval",
									"value": "５０００"
								},
								{
									"key": "start_datetime",
									"value": "２０２５－０１－０１　１２：３０：５５"
								},
								{
									"key": "end_datetime",
									"value": "２０２５－０１－０１　１２：３０：５５"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-32",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=+&lon=;&alt=*&h_zoom==&v_zoom=?&crs=%&timeid_flg=\"&interval=%26&start_datetime=!&end_datetime=/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "+"
								},
								{
									"key": "lon",
									"value": ";"
								},
								{
									"key": "alt",
									"value": "*"
								},
								{
									"key": "h_zoom",
									"value": "="
								},
								{
									"key": "v_zoom",
									"value": "?"
								},
								{
									"key": "crs",
									"value": "%"
								},
								{
									"key": "timeid_flg",
									"value": "\""
								},
								{
									"key": "interval",
									"value": "%26"
								},
								{
									"key": "start_datetime",
									"value": "!"
								},
								{
									"key": "end_datetime",
									"value": "/"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3-33",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=&lon= &alt=null&h_zoom=&v_zoom= &crs=null&timeid_flg=&interval= &start_datetime=null&end_datetime= ",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": ""
								},
								{
									"key": "lon",
									"value": " "
								},
								{
									"key": "alt",
									"value": "null"
								},
								{
									"key": "h_zoom",
									"value": ""
								},
								{
									"key": "v_zoom",
									"value": " "
								},
								{
									"key": "crs",
									"value": "null"
								},
								{
									"key": "timeid_flg",
									"value": ""
								},
								{
									"key": "interval",
									"value": " "
								},
								{
									"key": "start_datetime",
									"value": "null"
								},
								{
									"key": "end_datetime",
									"value": " "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lon=135.5&alt=10.5&h_zoom=11&v_zoom=15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5",
									"disabled": true
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatialid?lat=35.5&lo=135.5&alt=10.5&h_zoom=11&v_zoom=15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatialid"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lo",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/latlon2spatiali?lat=35.5&lon=135.5&alt=10.5&h_zoom=11&v_zoom=15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"latlon2spatiali"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.5"
								},
								{
									"key": "lon",
									"value": "135.5"
								},
								{
									"key": "alt",
									"value": "10.5"
								},
								{
									"key": "h_zoom",
									"value": "11"
								},
								{
									"key": "v_zoom",
									"value": "15"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "multi_latlon2spatialid",
			"item": [
				{
					"name": "7-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"10/896/405/10/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35,\r\n    \"lon\": 135,\r\n    \"alt\": 20,\r\n    \"h_zoom\": 10,\r\n    \"v_zoom\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"0/0/0/0/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": -85.0511287797,\r\n    \"lon\": -180,\r\n    \"alt\": 10,\r\n    \"h_zoom\": 0,\r\n    \"v_zoom\": 0,\r\n    \"limit\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"25/0/0/25/3\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 85.0511287797,\r\n    \"lon\": 180,\r\n    \"alt\": 3,\r\n    \"h_zoom\": 25,\r\n    \"v_zoom\": 25,\r\n    \"limit\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"crs\": 4612\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 0,\r\n    \"sequence\": false,\r\n    \"interval\": 5000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0_5000/347146\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": false,\r\n    \"interval\": 5000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0_5000/347146\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": false,\r\n    \"interval\": 5000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55.12345\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0_5000/347140\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": false,\r\n    \"interval\": 5000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55+09:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0_5000/347149\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": false,\r\n    \"interval\": 5000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55-03:30\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"11/1794/807/15/0_5000/347140\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": false,\r\n    \"interval\": 5000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55.12345+09:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    res = responseJson.spatialid[0];\r",
									"    pm.expect(res.length).to.eql(2);\r",
									"    pm.expect(res[0]).to.eql(\"5/28/12/20/0_20000/86785\");\r",
									"    pm.expect(res[1]).to.eql(\"5/28/12/20/0_20000/87784\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": false,\r\n    \"interval\": 20000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55+09:00\", \"2025-08-20 20:50:30+09:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid is correct\", function () {\r",
									"    res = responseJson.spatialid[0];\r",
									"    pm.expect(res.length).to.eql(6);\r",
									"    pm.expect(res[0]).to.eql(\"5/28/12/20/0_20000/86786\");\r",
									"    pm.expect(res[1]).to.eql(\"5/28/12/20/0_20000/86787\");\r",
									"    pm.expect(res[2]).to.eql(\"5/28/12/20/0_20000/86788\");\r",
									"    pm.expect(res[3]).to.eql(\"5/28/12/20/0_20000/86789\");\r",
									"    pm.expect(res[4]).to.eql(\"5/28/12/20/0_20000/86790\");\r",
									"    pm.expect(res[5]).to.eql(\"5/28/12/20/0_20000/86791\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": true,\r\n    \"interval\": 20000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-13",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    res = responseJson.spatialid[0]\r",
									"    pm.expect(res.length).to.eql(10);\r",
									"    pm.expect(res[0]).to.eql(\"5/28/12/20/0_20000/86786\");\r",
									"    pm.expect(res[1]).to.eql(\"5/28/12/20/0_20000/86787\");\r",
									"    pm.expect(res[2]).to.eql(\"5/28/12/20/0_20000/86788\");\r",
									"    pm.expect(res[3]).to.eql(\"5/28/12/20/0_20000/86789\");\r",
									"    pm.expect(res[4]).to.eql(\"5/28/12/20/0_20000/86790\");\r",
									"    pm.expect(res[5]).to.eql(\"5/28/12/20/0_20000/86791\");\r",
									"    pm.expect(res[6]).to.eql(\"5/28/12/20/0_20000/86792\");\r",
									"    pm.expect(res[7]).to.eql(\"5/28/12/20/0_20000/86793\");\r",
									"    pm.expect(res[8]).to.eql(\"5/28/12/20/0_20000/86794\");\r",
									"    pm.expect(res[9]).to.eql(\"5/28/12/20/0_20000/86795\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": true,\r\n    \"limit\": 10,\r\n    \"interval\": 20000,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-14",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    res = responseJson.spatialid[0]\r",
									"    pm.expect(res.length).to.eql(4);\r",
									"    pm.expect(res[0]).to.eql(\"5/28/12/20/0_1800/964292\");\r",
									"    pm.expect(res[1]).to.eql(\"5/28/12/20/0_1800/964293\");\r",
									"    pm.expect(res[2]).to.eql(\"5/28/12/20/0_1800/964294\");\r",
									"    pm.expect(res[3]).to.eql(\"5/28/12/20/0_1800/964295\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": true,\r\n    \"limit\": 10,\r\n    \"interval\": 1800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:30:00\"],\r\n    \"sort\": \"default\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    res = responseJson.spatialid[0]\r",
									"    pm.expect(res.length).to.eql(3);\r",
									"    pm.expect(res[0]).to.eql(\"5/28/12/20/0_3600/482146\");\r",
									"    pm.expect(res[1]).to.eql(\"5/28/12/20/0_3600/482147\");\r",
									"    pm.expect(res[2]).to.eql(\"5/28/12/20/0_3600/482148\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 3600,\r\n    \"start_datetime\": [\"2025-01-01 10:59:59\"],\r\n    \"end_datetime\": [\"2025-01-01 12:00:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"5/28/12/20/0_10800/160715\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 10800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:30:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-17",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    sid_list = responseJson.spatialid[0];\r",
									"    pm.expect(sid_list.length).to.eql(5);\r",
									"    pm.expect(sid_list[0]).to.eql(\"5/28/12/20/0_600/2892878\");\r",
									"    pm.expect(sid_list[1]).to.eql(\"5/28/12/20/0_600/2892879\");\r",
									"    pm.expect(sid_list[2]).to.eql(\"5/28/12/20/0_600/2892880\");\r",
									"    pm.expect(sid_list[3]).to.eql(\"5/28/12/20/0_600/2892881\");\r",
									"    pm.expect(sid_list[4]).to.eql(\"5/28/12/20/0_600/2892882\");\r",
									"});\r",
									"pm.test(\"spatialid[1] is correct\", function () {\r",
									"    sid_list = responseJson.spatialid[1];\r",
									"    pm.expect(sid_list.length).to.eql(4);\r",
									"    pm.expect(sid_list[0]).to.eql(\"5/28/12/20/0_600/2893022\");\r",
									"    pm.expect(sid_list[1]).to.eql(\"5/28/12/20/0_600/2893023\");\r",
									"    pm.expect(sid_list[2]).to.eql(\"5/28/12/20/0_600/2893024\");\r",
									"    pm.expect(sid_list[3]).to.eql(\"5/28/12/20/0_600/2893025\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 600,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\",\"2025-01-02 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:00:00\", \"2025-01-02 10:50:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-18",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    res = responseJson.spatialid[0];\r",
									"    pm.expect(res.length).to.eql(3);\r",
									"    pm.expect(res[0]).to.eql(\"5/28/12/20/0_1800/964293\");\r",
									"    pm.expect(res[1]).to.eql(\"5/28/12/20/0_1800/964294\");\r",
									"    pm.expect(res[2]).to.eql(\"5/28/12/20/0_1800/964295\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": true,\r\n    \"limit\": 10,\r\n    \"interval\": 1800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 12:00:00\"],\r\n    \"sort\": \"within\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-19",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"5/28/12/20/0_3600/482147\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 3600,\r\n    \"start_datetime\": [\"2025-01-01 10:00:01\"],\r\n    \"end_datetime\": [\"2025-01-01 12:59:59\"],\r\n    \"sort\": \"within\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-20",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 10800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 12:00:00\"],\r\n    \"sort\": \"within\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-21",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    sid_list = responseJson.spatialid[0];\r",
									"    pm.expect(sid_list.length).to.eql(5);\r",
									"    pm.expect(sid_list[0]).to.eql(\"5/28/12/20/0_600/2892878\");\r",
									"    pm.expect(sid_list[1]).to.eql(\"5/28/12/20/0_600/2892879\");\r",
									"    pm.expect(sid_list[2]).to.eql(\"5/28/12/20/0_600/2892880\");\r",
									"    pm.expect(sid_list[3]).to.eql(\"5/28/12/20/0_600/2892881\");\r",
									"    pm.expect(sid_list[4]).to.eql(\"5/28/12/20/0_600/2892882\");\r",
									"});\r",
									"pm.test(\"spatialid[1] is correct\", function () {\r",
									"    sid_list = responseJson.spatialid[1];\r",
									"    pm.expect(sid_list.length).to.eql(2);\r",
									"    pm.expect(sid_list[0]).to.eql(\"5/28/12/20/0_600/2893022\");\r",
									"    pm.expect(sid_list[1]).to.eql(\"5/28/12/20/0_600/2893023\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 600,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\",\"2025-01-02 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:15:00\", \"2025-01-02 10:45:00\"],\r\n    \"sort\": \"within\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-22",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"5/28/12/20/0_1800/964295\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"sequence\": true,\r\n    \"limit\": 10,\r\n    \"interval\": 1800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:30:00\"],\r\n    \"sort\": \"latest\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-23",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"5/28/12/20/0_3600/482147\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 3600,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:29:59\"],\r\n    \"sort\": \"latest\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(1);\r",
									"    pm.expect(responseJson.spatialid[0][0]).to.eql(\"5/28/12/20/0_10800/160715\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 10800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:30:00\"],\r\n    \"sort\": \"latest\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7-25",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"spatialid[0] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[0].length).to.eql(1);\r",
									"    sid_list = responseJson.spatialid[0];\r",
									"    pm.expect(sid_list[0]).to.eql(\"5/28/12/20/0_600/2892882\");\r",
									"});\r",
									"pm.test(\"spatialid[1] is correct\", function () {\r",
									"    pm.expect(responseJson.spatialid[1].length).to.eql(1);\r",
									"    sid_list = responseJson.spatialid[1];\r",
									"    pm.expect(sid_list[0]).to.eql(\"5/28/12/20/0_600/2893025\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 38.2,\r\n    \"lon\": 136.2,\r\n    \"alt\": 13,\r\n    \"h_zoom\": 5,\r\n    \"v_zoom\": 20,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 600,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\",\"2025-01-02 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:00:00\", \"2025-01-02 10:50:00\"],\r\n    \"sort\": \"latest\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-26",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params exception is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"exception\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Exception error\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"crs\": 11111\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-27",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"8-// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params exception is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"exception\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Exception error\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"crs\": 3097\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-28",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params sort is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"sort\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Invalid sort. Sort is one of ['default', 'within', 'latest']\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 1800,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:30:00\"],\r\n    \"sort\": \"with\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-29",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params interval is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 1800\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-31",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params interval is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:30:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8-32",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params datetime is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"datetime\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Start_datetime and end_datetime lengths do not match\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 3600,\r\n    \"start_datetime\": [\"2025-01-01 10:20:00\",\"2025-01-02 10:20:00\"],\r\n    \"end_datetime\": [\"2025-01-01 11:00:00\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-33",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"greater_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params limit is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"greater_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": -85.0511287798,\r\n    \"lon\": -180.1,\r\n    \"alt\": 10,\r\n    \"h_zoom\": -1,\r\n    \"v_zoom\": -1,\r\n    \"timeid_flg\": -1,\r\n    \"limit\": -1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-34",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params limit is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"less_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 85.0511287798,\r\n    \"lon\": 180.1,\r\n    \"alt\": 10,\r\n    \"h_zoom\": 26,\r\n    \"v_zoom\": 26,\r\n    \"timeid_flg\": 2,\r\n    \"limit\": 61\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-35",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"less_than_equal\");\r",
									"});\r",
									"pm.test(\"invalid params lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"less_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 900.0,\r\n    \"lon\": 1800.0,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-36",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"timeid_flg\": 1,\r\n    \"interval\": 1000,\r\n    \"start_datetime\": [\"2025/1/1 12:30:55\"],\r\n    \"end_datetime\": [\"2025/1/1 12:30:55\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-37",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_from_float\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_from_float\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"int_from_float\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_from_float\");\r",
									"});\r",
									"pm.test(\"invalid limit is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_from_float\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_from_float\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11.1,\r\n    \"v_zoom\": 15.1,\r\n    \"crs\": 4326.1,\r\n    \"timeid_flg\": 0.9,\r\n    \"limit\": 5.5,\r\n    \"interval\": 50000.1,\r\n    \"start_datetime\": [\"2025-01-01 12:30:55\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-38",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid sequence is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"sequence\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"bool_parsing\");\r",
									"});\r",
									"pm.test(\"invalid limite is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[10].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[10].type).to.eql(\"list_type\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[11].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[11].type).to.eql(\"list_type\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": \"aaa\",\r\n    \"lon\": \"bbb\",\r\n    \"alt\": \"ccc\",\r\n    \"h_zoom\": \"ddd\",\r\n    \"v_zoom\": \"eee\",\r\n    \"crs\": \"fff\",\r\n    \"timeid_flg\": \"ggg\",\r\n    \"sequence\": \"hhh\",\r\n    \"limit\": \"iii\",\r\n    \"interval\": \"jjj\",\r\n    \"start_datetime\": \"kkk\",\r\n    \"end_datetime\": \"lll\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-39",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"start_datetime\": [\"aaa\"],\r\n    \"end_datetime\": [\"bbb\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-40",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid sequence is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"sequence\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"bool_parsing\");\r",
									"});\r",
									"pm.test(\"invalid limite is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[10].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[10].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[11].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[11].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": \"３５．５\",\r\n    \"lon\": \"１３５．５\",\r\n    \"alt\": \"１０．５\",\r\n    \"h_zoom\": \"１１\",\r\n    \"v_zoom\": \"１５\",\r\n    \"crs\": \"４３２６\",\r\n    \"timeid_flg\": \"１\",\r\n    \"sequence\": \"ｆａｌｓｅ\",\r\n    \"limit\": \"５\",\r\n    \"interval\": \"５０００\",\r\n    \"start_datetime\": [\"２０２５－０１－０１　１２：３０：５５\"],\r\n    \"end_datetime\": [\"２０２５－０１－０１　１２：３０：５５\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-41",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid sequence is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"sequence\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"bool_parsing\");\r",
									"});\r",
									"pm.test(\"invalid limite is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[10].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[10].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[11].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[11].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": \"+\",\r\n    \"lon\": \";\",\r\n    \"alt\": \"*\",\r\n    \"h_zoom\": \"=\",\r\n    \"v_zoom\": \"?\",\r\n    \"crs\": \"%\",\r\n    \"timeid_flg\": \"'\",\r\n    \"sequence\": \"&\",\r\n    \"limit\": \"!\",\r\n    \"interval\": \"/\",\r\n    \"start_datetime\": [\">\"],\r\n    \"end_datetime\": [\"-\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-42",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid lat is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid lon is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"float_parsing\");\r",
									"});\r",
									"pm.test(\"invalid alt is correct\", function () {\r",
									"    pm.expect(errorObj[2].loc[1]).to.eql(\"alt\");\r",
									"    pm.expect(errorObj[2].type).to.eql(\"float_type\");\r",
									"});\r",
									"pm.test(\"invalid h_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[3].loc[1]).to.eql(\"h_zoom\");\r",
									"    pm.expect(errorObj[3].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid v_zoom is correct\", function () {\r",
									"    pm.expect(errorObj[4].loc[1]).to.eql(\"v_zoom\");\r",
									"    pm.expect(errorObj[4].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid crs is correct\", function () {\r",
									"    pm.expect(errorObj[5].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[5].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid timeid_flg is correct\", function () {\r",
									"    pm.expect(errorObj[6].loc[1]).to.eql(\"timeid_flg\");\r",
									"    pm.expect(errorObj[6].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid sequence is correct\", function () {\r",
									"    pm.expect(errorObj[7].loc[1]).to.eql(\"sequence\");\r",
									"    pm.expect(errorObj[7].type).to.eql(\"bool_parsing\");\r",
									"});\r",
									"pm.test(\"invalid limite is correct\", function () {\r",
									"    pm.expect(errorObj[8].loc[1]).to.eql(\"limit\");\r",
									"    pm.expect(errorObj[8].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid interval is correct\", function () {\r",
									"    pm.expect(errorObj[9].loc[1]).to.eql(\"interval\");\r",
									"    pm.expect(errorObj[9].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[10].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[10].type).to.eql(\"list_type\");\r",
									"});\r",
									"pm.test(\"invalid end_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[11].loc[1]).to.eql(\"end_datetime\");\r",
									"    pm.expect(errorObj[11].type).to.eql(\"list_type\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": \"\",\r\n    \"lon\": \" \",\r\n    \"alt\": null,\r\n    \"h_zoom\": \"\",\r\n    \"v_zoom\": \" \",\r\n    \"crs\": \"\",\r\n    \"timeid_flg\": \"\",\r\n    \"sequence\": \" \",\r\n    \"limit\": \"\",\r\n    \"interval\": \"\",\r\n    \"start_datetime\": \" \",\r\n    \"end_datetime\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "9-43",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid start_datetime is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"start_datetime\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"datetime_from_date_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15,\r\n    \"start_datetime\": [\"\"],\r\n    \"end_datetime\": [\"\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "10-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lat\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "11-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"lon\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lo\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatialid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatialid"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "12-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lat\": 35.5,\r\n    \"lon\": 135.5,\r\n    \"alt\": 10.5,\r\n    \"h_zoom\": 11,\r\n    \"v_zoom\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_latlon2spatiali",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_latlon2spatiali"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "spatialid2latlon",
			"item": [
				{
					"name": "25-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(responseJson.coordinates.length).to.eql(8);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "0"
								},
								{
									"key": "crs",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "25-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(responseJson.coordinates.length).to.eql(2);\r",
									"});\r",
									"const coord = responseJson.coordinates\r",
									"pm.test(\"interval is correct\", function () {\r",
									"    pm.expect(coord[1].interval).to.eql(5000);\r",
									"});\r",
									"pm.test(\"start_datetime is correct\", function () {\r",
									"    pm.expect(coord[1].start_datetime).to.eql(\"2025-01-01 02:53:20\");\r",
									"});\r",
									"pm.test(\"end_datetime is correct\", function () {\r",
									"    pm.expect(coord[1].end_datetime).to.eql(\"2025-01-01 04:16:40\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=11/1794/807/15/0_5000/347140&flg=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "11/1794/807/15/0_5000/347140"
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "25-3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(responseJson.coordinates.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=1&crs=4612",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "4612"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26-4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(errorObj).to.eql(\"list index out of range\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=11/1794/807/15&flg=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "11/1794/807/15"
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "4612",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26-5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(errorObj).to.eql(\"list index out of range\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=11/1794/807/15/0_5000&flg=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "11/1794/807/15/0_5000"
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "4612",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26-6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params exception is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"exception\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Exception error\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=1&crs=11111",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "11111"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26-7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(errorObj).to.eql(\"list index out of range\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=&flg=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": ""
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"greater_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "-1"
								},
								{
									"key": "crs",
									"value": "3097",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"less_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "2"
								},
								{
									"key": "crs",
									"value": "4612",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=0.9&crs=4326.1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "0.9"
								},
								{
									"key": "crs",
									"value": "4326.1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// レスポンスボディの各値の確認// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=aaa&crs=bbb",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "aaa"
								},
								{
									"key": "crs",
									"value": "bbb"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// レスポンスボディの各値の確認// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=１&crs=４３２６",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "１"
								},
								{
									"key": "crs",
									"value": "４３２６"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-13",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// レスポンスボディの各値の確認// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=?&crs=%23",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "?"
								},
								{
									"key": "crs",
									"value": "#"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "27-14",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// レスポンスボディの各値の確認// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&flg=&crs= ",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": ""
								},
								{
									"key": "crs",
									"value": " "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "28-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"id\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?flg=１",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0",
									"disabled": true
								},
								{
									"key": "flg",
									"value": "１"
								},
								{
									"key": "crs",
									"value": "４３２６",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "29-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlon?id=10/896/405/10/0&fl=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlon"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "fl",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// レスポンスボディの各値の確認// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spatialid/spatialid2latlo?id=10/896/405/10/0&flg=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"spatialid2latlo"
							],
							"query": [
								{
									"key": "id",
									"value": "10/896/405/10/0"
								},
								{
									"key": "flg",
									"value": "1"
								},
								{
									"key": "crs",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "multi_spatialid2latlon",
			"item": [
				{
					"name": "31-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(responseJson.coordinates[0].length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n  ],\r\n  \"flg\": 1\r\n//   \"crs\": 4326\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "31-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(responseJson.coordinates[0].length).to.eql(9);\r",
									"})\r",
									"\r",
									"const coord = responseJson.coordinates[0]\r",
									"pm.test(\"interval is correct\", function () {\r",
									"    pm.expect(coord[8].interval).to.eql(5000);\r",
									"});\r",
									"pm.test(\"start_datetime is correct\", function () {\r",
									"    pm.expect(coord[8].start_datetime).to.eql(\"2025-01-01 02:53:20\");\r",
									"});\r",
									"pm.test(\"end_datetime is correct\", function () {\r",
									"    pm.expect(coord[8].end_datetime).to.eql(\"2025-01-01 04:16:40\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"11/1794/807/15/0_5000/347140\"\r\n  ],\r\n  \"flg\": 0\r\n//   \"crs\": 4326\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "31-3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(responseJson.coordinates.length).to.eql(2);\r",
									"})\r",
									"\r",
									"const coord0 = responseJson.coordinates[0]\r",
									"pm.test(\"latlon is correct\", function () {\r",
									"    pm.expect(coord0[0].lon).to.eql(135.17578125);\r",
									"    pm.expect(coord0[0].lat).to.eql(35.029996369);\r",
									"});\r",
									"\r",
									"const coord1 = responseJson.coordinates[1]\r",
									"pm.test(\"interval is correct\", function () {\r",
									"    pm.expect(coord1[1].interval).to.eql(5000);\r",
									"});\r",
									"pm.test(\"start_datetime is correct\", function () {\r",
									"    pm.expect(coord1[1].start_datetime).to.eql(\"2025-01-01 02:53:20\");\r",
									"});\r",
									"pm.test(\"end_datetime is correct\", function () {\r",
									"    pm.expect(coord1[1].end_datetime).to.eql(\"2025-01-01 04:16:40\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\",\r\n    \"11/1794/807/15/0_5000/347140\"\r\n    ],\r\n  \"flg\": 1,\r\n  \"crs\": 4612\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "32-4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(errorObj).to.eql(\"list index out of range\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10\"\r\n    ],\r\n  \"flg\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "32-5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(errorObj).to.eql(\"list index out of range\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"11/1794/807/15/0_5000\"\r\n    ],\r\n  \"flg\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "32-6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params exception is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"exception\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Exception error\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": 1,\r\n  \"crs\": 11111\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "32-7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"coordinates length is correct\", function () {\r",
									"    pm.expect(errorObj).to.eql(\"list index out of range\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"\"\r\n    ],\r\n  \"flg\": 1,\r\n  \"crs\": 4612\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "32-8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail[\"invalid-params\"]\r",
									"pm.test(\"invalid params idn is correct\", function () {\r",
									"    pm.expect(errorObj[0][\"name\"]).to.eql(\"id\");\r",
									"    pm.expect(errorObj[0][\"message\"]).to.eql(\"Required parameter not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [],\r\n  \"flg\": 1,\r\n  \"crs\": 4612\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-9",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"greater_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": -1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"less_than_equal\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-11",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params id is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"id\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"string_type\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    10\r\n    ],\r\n  \"flg\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-12",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_from_float\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_from_float\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": 0.9,\r\n  \"crs\": 4326.1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-13",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": \"aaa\",\r\n  \"crs\": \"bbb\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-14",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": \"１\",\r\n  \"crs\": \"４３２６\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_parsing\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": \"?\",\r\n  \"crs\": \"#\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "33-16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params flg is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"int_type\");\r",
									"});\r",
									"pm.test(\"invalid params crs is correct\", function () {\r",
									"    pm.expect(errorObj[1].loc[1]).to.eql(\"crs\");\r",
									"    pm.expect(errorObj[1].type).to.eql(\"int_parsing\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": null,\r\n  \"crs\": \" \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "34-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"id\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"flg\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "35-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"// レスポンスボディの各値の確認\r",
									"const responseJson = pm.response.json();\r",
									"// invalid-params内の各エラー確認\r",
									"const errorObj = responseJson.detail\r",
									"pm.test(\"invalid params [body] is correct\", function () {\r",
									"    pm.expect(errorObj[0].loc[1]).to.eql(\"flg\");\r",
									"    pm.expect(errorObj[0].type).to.eql(\"missing\");\r",
									"    pm.expect(errorObj[0].msg).to.eql(\"Field required\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"fl\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlon"
							]
						}
					},
					"response": []
				},
				{
					"name": "36-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// ステータスコードの確認\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": [\r\n    \"10/896/405/10/0\"\r\n    ],\r\n  \"flg\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spatialid/multi_spatialid2latlo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spatialid",
								"multi_spatialid2latlo"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}