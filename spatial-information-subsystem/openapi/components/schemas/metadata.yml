schemaMetadata:
  type: object
  properties:
    creationTimeMs:
      type: integer
      format: int64
      description: Creation time
      example: 1698053295519
    inAlluxioPercentage:
      type: integer
      description: Percentage cached
      example: 100
    inMemoryPercentage:
      type:  integer
      description: Percentage cached in memory
      example: 100
    lastAccessTimeMs:
      type: integer
      format: int64
      description: Last access time
      example: 1698053281000
    lastModificationTimeMs:
      type: integer
      format: int64
      description: |-
        Last modificated time
        <ul>
          <li>In search technical metadata, last_modified_dt_ge or last_modified_dt_lt specified in request parameters are compared with this value.</li>
        </ul>
      example: 1698053281000
    length:
      type: integer
      format: int64
      description: |-
        File length
        <ul>
          <li>In search technical metadata, size_ge or size_glt specified in request parameters are compared with this value.</li>
        </ul>
      example: 5
    name:
      type: string
      description: Name of the file or directory
      example: file
    path:
      type: string
      description: Path name
      example: /coopX/s3/dir/file
    persistenceState:
      type: string
      description: Persistence state
      example: PERSISTED
    ttl:
      type: integer
      format: int64
      description: Time To Live
      example: -1
    ufsPath:
      type: string
      description: Corresponding UFS path
      example: s3://bucket/dir/file
    cacheable:
      type: boolean
      description: Cacheable or not
      example: true
    completed:
      type: boolean
      description: Completed flag
      example: true
    folder:
      type: boolean
      description: Directory or not
      example: false
    mountPoint:
      type: boolean
      description: Mount point or not
      example: false
    persisted:
      type: boolean
      description: Persisted or not
      example: true

schemaCreateMetadataRequest:
  type: object
  properties:
    loadMetadataType:
      type: string
      nullable: true
      description: |-
        The behavior of loading metadata from UFS.
        <ul>
          <li><B>NEVER</B> will never consult the UFS.</li>
          <li><B>ONCE</B> will access the UFS the "first" time (according to a cache), but not after that.</li>
          <li><B>ALWAYS</B> will always access UFS to see if the path exists in the UFS.</li>
        </ul>
      enum: [NEVER, ONCE, ALWAYS, NULL]
      default: NULL
      example: "NEVER"
    syncIntervalMs:
      type: integer
      format: int64
      nullable: true
      description: |-
        The interval for syncing UFS metadata before invoking an operation on a path.
        <ul>
          <li>-1 means no sync will occur.</li>
          <li>0 means VDL will always sync the metadata of the path before an operation.</li>
          <li>If you specify a time interval, VDL will (best effort) not re-sync a path within that time interval.</li>
          <li>If a sync is performed for an operation, the configuration of "loadMetadataType" will be ignored.</li>
        </ul>
      default: NULL
      example: 0

schemaUpdateMetadataRequest:
  type: object
  properties:
    recursive:
      type: boolean
      description: If true, recursively process directories under the VDL path.
      default: false

schemaSearchMetadataRequest:
  type: object
  properties:
    recursive:
      type: boolean
      description: If true, recursively process directories under the VDL path.
      default: false
    loadMetadataType:
      type: string
      nullable: true
      description: |-
        The behavior of loading metadata from UFS.
        <ul>
          <li><B>NEVER</B> will never consult the UFS.</li>
          <li><B>ONCE</B> will access the UFS the "first" time (according to a cache), but not after that.</li>
          <li><B>ALWAYS</B> will always access UFS to see if the path exists in the UFS.</li>
        </ul>
      enum: [NEVER, ONCE, ALWAYS, NULL]
      default: NULL
      example: "NEVER"
    syncIntervalMs:
      type: integer
      format: int64
      nullable: true
      description: |-
        The interval for syncing UFS metadata before invoking an operation on a path.
        <ul>
          <li>-1 means no sync will occur.</li>
          <li>0 means VDL will always sync the metadata of the path before an operation.</li>
          <li>If you specify a time interval, VDL will (best effort) not re-sync a path within that time interval.</li>
          <li>If a sync is performed for an operation, the configuration of "loadMetadataType" will be ignored.</li>
        </ul>
      default: NULL
      example: 0
