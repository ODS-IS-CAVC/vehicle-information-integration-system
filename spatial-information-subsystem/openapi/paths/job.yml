jobs: 
  summary: This API group is related to job management function
  post:
    tags:
      - job
    operationId: jobCreate
    summary: Create the job
    description: |-
      Create the job
      <ul>
        <li>Job ID cannot be specified (automatically generated by VDL)</li>
      </ul>
      Request example: POST /api/v1/jobs
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/job.yml#/schemaCreateJobRequest'
          examples:
            create_sample:
              $ref: '../components/examples/job.yml#/job_create_sample'
    responses:
      '201':
        description: Returns the created job
        content:
          application/json:
            schema:
              $ref: '../components/schemas/job.yml#/schemaJob'
            example:
              $ref: '../components/examples/job.yml#/job_get_sample'
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '500':
        description: An error occurred in the server's internal processing

jobs_search: 
  summary: This group of API is a search function for job
  get:
    tags:
      - job
    operationId: jobSearch
    summary: Search the job
    description: |-
      Search the job
      <ul>
        <li>Only resources authorized by authorization function are returned</li>
        <li>Supports filtering query</li>
        <li>If no query is specified, no refinement is performed</li>
        <li>If multiple query conditions are specified, they are combined as logical product (AND) conditions</li>
        <li>OR/NOT conditional filtering is not provided</li>
      </ul>
      Request example: GET /api/v1/jobs/search?name_contain=job1
    parameters:
      - $ref: '../components/parameters/param.yml#/queryName_eq'
      - $ref: '../components/parameters/param.yml#/queryName_contain'
      - $ref: '../components/parameters/param.yml#/queryDescription_contain'
      - $ref: '../components/parameters/param.yml#/queryCustomPropertyKey_eq'
      - $ref: '../components/parameters/param.yml#/queryCustomPropertyValue_eq'
      - $ref: '../components/parameters/param.yml#/queryCustomPropertyValue_contain'
      - $ref: '../components/parameters/param.yml#/queryTagname_eq'
      - $ref: '../components/parameters/param.yml#/queryTagname_contain'
      - $ref: '../components/parameters/param.yml#/queryTermname_eq'
      - $ref: '../components/parameters/param.yml#/queryTermname_contain'
      - $ref: '../components/parameters/param.yml#/queryOwner_eq'
    responses:
      '200':
        description: |-
          Returns the results of a search for job as an array
          <ul>
            <li>If the target resource does not exist, or if authorization function returns NG as an authorization decision result for all resources, an empty array is returned</li>
          </ul>
        content:
          application/json:
            schema:
              type: array
              description: List of jobs
              items:
                $ref: '../components/schemas/job.yml#/schemaJob'
            example:
              $ref: '../components/examples/job.yml#/job_list_sample'
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '500':
        description: An error occurred in the server's internal processing

jobs_{jobId}: 
  summary: This is a group of API that require job Id to be specified as a request parameter among the job management functions
  get:
    tags:
      - job
    operationId: jobRead
    summary: Get the job
    parameters:
      - $ref: '../components/parameters/param.yml#/pathJobId'
    responses:
      '200':
        description: Return the retrieved job
        content:
          application/json:
            schema:
              $ref: '../components/schemas/job.yml#/schemaJob'
            example:
              $ref: '../components/examples/job.yml#/job_get_sample'
      '404':
        description: |-
          The target resource does not exist<br>
          Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Requested resource not found
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '500':
        description: Internal Server Error
  patch:
    tags:
      - job
    operationId: jobUpdate
    summary: Update the job
    description: |-
      Update the job with the data specified in the body parameter.<br>
      <ul>
        <li>Specified objects are replaced. Objects that description, tags, terms, customProperties, externalUrl can be specified</li>
      </ul>
      Request example: PATCH /api/v1/jobs/{jobId}
    parameters:
      - $ref: '../components/parameters/param.yml#/pathJobId'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/job.yml#/schemaUpdateJobRequest'
          examples:
            update_sample:
              $ref: '../components/examples/job.yml#/job_update_sample'
    responses:
      '204':
        description: Responds that the resource is successfully updated
      '404':
        description: |-
          The target resource does not exist<br>
          Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Requested resource not found
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '500':
        description: An error occurred in the server's internal processing
  delete:
    tags:
      - job
    operationId: jobDelete
    summary: Delete the job
    description: |-
      Delete the job<br>
      Request example: DELETE /api/v1/jobs/{jobId}
    parameters:
      - $ref: '../components/parameters/param.yml#/pathJobId'
    responses:
      '204':
        description: Responds that the resource has been successfully deleted
      '404':
        description: The target resource does not exist
        content:
          text/plain:
            schema:
              type: string
            example: Requested resource not found
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '500':
        description: An error occurred in the server's internal processing
