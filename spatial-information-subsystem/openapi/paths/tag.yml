tags: 
  summary: This API group is related to tag management function
  post:
    tags:
      - tag
    operationId: tagCreate
    summary: Create the tag
    description: |-
      Create the tag
      <ul>
        <li>Tag ID cannot be specified (automatically generated by VDL)</li>
      </ul>
      Request example: POST /api/v1/tags
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../components/schemas/tag.yml#/schemaCreateTagRequest'
          examples: 
            create_sample: 
              $ref: '../components/examples/tag.yml#/tag_create_sample'
    responses:
      '201':
        description: Returns the created tag
        content:
          application/json:
            schema:
              $ref: '../components/schemas/tag.yml#/schemaTag'
            example: 
              $ref: '../components/examples/tag.yml#/tag_get_sample'
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '409':
        description: Requested resource already exists
        content:
          text/plain:
            schema:
              type: string
            example: Conflicts with current resources
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '500':
        description: An error occurred in the server's internal processing

tags_search: 
  summary: This group of API is a search function for tag
  get:
    tags:
      - tag
    operationId: tagSearch
    summary: Search the tag
    description: |-
      Search the tag
      <ul>
        <li>Supports filtering query</li>
        <li>If no query is specified, no refinement is performed</li>
        <li>If multiple query conditions are specified, they are combined as logical product (AND) conditions</li>
        <li>OR/NOT conditional filtering is not provided</li>
      </ul>
      Request example: GET /api/v1/tags/search?name_eq=weather
    parameters:
      - $ref: '../components/parameters/param.yml#/queryName_eq'
      - $ref: '../components/parameters/param.yml#/queryName_contain'
      - $ref: '../components/parameters/param.yml#/queryDescription_contain'
      - $ref: '../components/parameters/param.yml#/queryOwner_eq'
    responses:
      '200':
        description: |-
          Returns the results of a search for tag as an array
          <ul>
            <li>If the target resource does not exist an empty array is returned</li>
          </ul>
        content:
          application/json:
            schema:
              type: array
              description: List of tags
              items:
                $ref: '../components/schemas/tag.yml#/schemaTag'
            example: 
              $ref: '../components/examples/tag.yml#/tag_list_sample'   
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '500':
        description: An error occurred in the server's internal processing

tags_{tagId}: 
  summary: This is a group of API that require tag Id to be specified as a request parameter among the tag management functions
  get:
    tags:
      - tag
    operationId: tagRead
    summary: Get the tag
    parameters:
      - $ref: '../components/parameters/param.yml#/pathTagId'
    responses:
      '200':
        description: Return the retrieved tag
        content:
          application/json:
            schema:
              $ref: '../components/schemas/tag.yml#/schemaTag'
            example: 
              $ref: '../components/examples/tag.yml#/tag_get_sample'
      '404':
        description: |-
          The target resource does not exist<br>
          Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Requested resource not found
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '500':
        description: Internal Server Error
  patch:
    tags:
      - tag
    operationId: tagUpdate
    summary: Update the tag
    description: |-
      Update the tag with the data specified in the body parameter.<br>
      <ul>
        <li>Specified objects are replaced. Objects that description can be specified</li>
      </ul>
      Request example: PATCH /api/v1/tags/{tagId}
    parameters:
      - $ref: '../components/parameters/param.yml#/pathTagId'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/tag.yml#/schemaUpdateTagRequest'
          examples: 
            update_sample: 
              $ref: '../components/examples/tag.yml#/tag_update_sample'
    responses:
      '204':
        description: Responds that the resource is successfully updated
      '404':
        description: |-
          The target resource does not exist<br>
          Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Requested resource not found
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '403':
        description: Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '500':
        description: An error occurred in the server's internal processing
  delete:
    tags:
      - tag
    operationId: tagDelete
    summary: Delete the tag
    description: |-
      Delete the tag<br>
      Request example: DELETE /api/v1/tags/{tagId}
    parameters:
      - $ref: '../components/parameters/param.yml#/pathTagId'
    responses:
      '204':
        description: Responds that the resource has been successfully deleted
      '403':
        description: |-
          If the target resource cannot be deleted (for example, refered from some datesets)<br>
          Authorization function returned NG as an authorization decision result
        content:
          text/plain:
            schema:
              type: string
            example: Operation not permitted
      '404':
        description: The target resource does not exist
        content:
          text/plain:
            schema:
              type: string
            example: Requested resource not found
      '400':
        description: The required parameters for the request do not exist, or the input format is invalid
        content:
          text/plain:
            schema:
              type: string
            example: Request is invalid
      '401':
        description: No ID token or access token specified or If the discovery endpoint specified by "iss" in the token is not present in the configuration file
        content:
          text/plain:
            schema:
              type: string
            example: Failed to authenticate
      '500':
        description: An error occurred in the server's internal processing
